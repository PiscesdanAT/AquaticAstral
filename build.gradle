buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'

version = '1.0.0'
group = 'com.piscesdan.aquaticastral'
archivesBaseName = 'AquaticAstral-1.15.2'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

repositories {
    flatDir {
        dirs 'lib'
    }

    mavenLocal()
    jcenter()
}

minecraft {
    mappings channel: 'snapshot', version: '20200514-1.15.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'

            ideaModule "${project.name}.main"
            environment 'MOD_CLASSES', "${project.file("out/production/resources").canonicalPath};${project.file("out/production/classes").canonicalPath}"
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'

            ideaModule "${project.name}.main"
            environment 'MOD_CLASSES', "${project.file("out/production/resources").canonicalPath};${project.file("out/production/classes").canonicalPath}"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.35'

    compileOnly fg.deobf('hellfirepvp.astralsorcery:astralsorcery:1.15.2-1.12.9')
    runtimeOnly fg.deobf('hellfirepvp.astralsorcery:astralsorcery:1.15.2-1.12.9')
}

jar {
    from sourceSets.main.output
    manifest {
        attributes([
                "Specification-Title": "Aquatic Astral",
                "Specification-Vendor": "Piscesdan",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor": "Piscesdan",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}